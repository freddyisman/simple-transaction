"""add store procedure to create transaction

Revision ID: 696c8550f6fe
Revises: e2e710984aeb
Create Date: 2024-12-16 22:52:51.274050

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "696c8550f6fe"
down_revision = "e2e710984aeb"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(
        """
    CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
    CREATE OR REPLACE FUNCTION create_transaction(sender_number VARCHAR, receiver_number VARCHAR, transaction_amount INTEGER)
    RETURNS VOID AS $$
    DECLARE
        sender_balance INTEGER;
        receiver_balance INTEGER;
    BEGIN
        -- Check if sender exists
        IF NOT EXISTS (SELECT 1 FROM account WHERE number = sender_number) THEN
            RAISE EXCEPTION 'Sender account does not exist';
        END IF;

        -- Check if receiver exists
        IF NOT EXISTS (SELECT 1 FROM account WHERE number = receiver_number) THEN
            RAISE EXCEPTION 'Receiver account does not exist';
        END IF;

        -- Get current sender balance
        SELECT balance INTO sender_balance FROM account WHERE number = sender_number;

        -- Check if sender has enough balance
        IF sender_balance < transaction_amount THEN
            RAISE EXCEPTION 'Insufficient funds in sender account';
        END IF;

        -- Get current receiver balance
        SELECT balance INTO receiver_balance FROM account WHERE number = receiver_number;

        -- Update balances
        UPDATE account SET balance = balance - transaction_amount WHERE number = sender_number;
        UPDATE account SET balance = balance + transaction_amount WHERE number = receiver_number;

        -- Insert transaction log
        INSERT INTO transaction_log (id, sender_number, receiver_number, amount, created_at)
        VALUES (uuid_generate_v4(), sender_number, receiver_number, transaction_amount, NOW());
    END;
    $$ LANGUAGE plpgsql;
    """
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(
        "DROP FUNCTION IF EXISTS create_transaction(sender_number VARCHAR, receiver_number VARCHAR, transaction_amount INTEGER);"
    )
    # ### end Alembic commands ###
